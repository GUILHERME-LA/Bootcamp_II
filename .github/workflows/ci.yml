name: CI Extensão Chrome E2E

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  test-build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout código
        uses: actions/checkout@v4
        
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          
      - name: Instalar dependências do projeto
        run: npm ci
        
      # Instala o Chromium e as dependências necessárias para o Playwright
      - name: Instalar Playwright Browsers
        run: npx playwright install --with-deps chromium
        
      - name: Build extensão (Copia para dist/ e gera ZIP)
        # O script de build é crucial para criar a pasta 'dist' que será carregada nos testes
        run: npm run build
        
      - name: Executar Testes E2E com Playwright
        # Usa o comando de teste E2E. O uso do || garante que mesmo com falha o próximo passo
        # (que carrega o relatório) seja executado.
        run: npm run test:e2e || true 
        
      - name: Publicar Relatório HTML do Playwright
        if: always() # Garante a execução mesmo que os testes falhem
        uses: actions/upload-artifact@v4
        with:
          name: playwright-report
          path: playwright-report
          
      - name: Publicar Pacote da Extensão (.zip)
        uses: actions/upload-artifact@v4
        with:
          name: extension-zip
          path: dist/extension.zip

      - name: Criar Release e Anexar ZIP (Opcional - Implementação de Release Automática)
        # Adiciona o zip como anexo à Release, caso haja um tag push
        if: github.event_name == 'push' && startsWith(github.ref, 'refs/tags/v')
        uses: softprops/action-gh-release@v2
        with:
          files: dist/extension.zip
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}